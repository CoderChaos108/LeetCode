class Solution {
    int[][] a;
    int n,total;
    boolean[] seen;
    public void dfs(int node){
        if(seen[node])
        return;
        seen[node]=true;
        total++;
        for(int i=0;i<n;i++){
        if(a[node][i]==1)
        dfs(i);
        }
    }
    public int minMalwareSpread(int[][] graph, int[] initial) {
        a=graph;
        n=graph.length;
        int currNode=-1;
        int currTotal=Integer.MAX_VALUE;
        for(int i=0;i<initial.length;i++){
            seen=new boolean[n];
             total=0;
             int removedNode=initial[i];
            for(int j=0;j<initial.length;j++){
                int node=initial[j];
                if(node==removedNode)
                continue;
                dfs(node);
            }
            if (total<currTotal||(total==currTotal&&removedNode<currNode)){
            currTotal = total;
            currNode = removedNode;
            }
        }
        return currNode;
    }
}